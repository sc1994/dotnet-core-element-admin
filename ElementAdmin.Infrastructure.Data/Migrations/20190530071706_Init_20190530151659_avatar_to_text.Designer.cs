// <auto-generated />
using System;
using ElementAdmin.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElementAdmin.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ElementAdminContext))]
    [Migration("20190530071706_Init_20190530151659_avatar_to_text")]
    partial class Init_20190530151659_avatar_to_text
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ElementAdmin.Domain.Entity.ElementAdmin.RoleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DeleteAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("RDescription")
                        .HasMaxLength(512);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("RName")
                        .HasMaxLength(256);

                    b.Property<string>("RoleKey")
                        .IsRequired()
                        .HasColumnName("RRoleKey")
                        .HasMaxLength(16);

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("EARoles");
                });

            modelBuilder.Entity("ElementAdmin.Domain.Entity.ElementAdmin.RoleRouteEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DeleteAt");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("RoleKey")
                        .HasColumnName("RRRoleKey");

                    b.Property<string>("RouteKey")
                        .HasColumnName("RRRouteKey");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("EARoleRoutes");
                });

            modelBuilder.Entity("ElementAdmin.Domain.Entity.ElementAdmin.RouteEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DeleteAt");

                    b.Property<bool>("IsDelete");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("RName")
                        .HasMaxLength(256);

                    b.Property<string>("ParentRouteKey")
                        .IsRequired()
                        .HasColumnName("RParentKey")
                        .HasMaxLength(256);

                    b.Property<string>("RouteKey")
                        .IsRequired()
                        .HasColumnName("RRouteKey")
                        .HasMaxLength(256);

                    b.Property<int>("Sort")
                        .HasColumnName("RSort");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("EARoutes");
                });

            modelBuilder.Entity("ElementAdmin.Domain.Entity.ElementAdmin.UserInfoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnName("UIAvatar");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DeleteAt");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnName("UIIntroduction")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDelete");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnName("UINickName")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("UIPassword")
                        .HasMaxLength(18);

                    b.Property<string>("RolesString")
                        .IsRequired()
                        .HasColumnName("UIRolesString")
                        .HasMaxLength(32);

                    b.Property<Guid>("Token")
                        .HasColumnName("UIToken")
                        .HasMaxLength(64);

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UIUserName")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("EAUserInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
